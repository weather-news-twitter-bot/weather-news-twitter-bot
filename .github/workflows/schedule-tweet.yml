# .github/workflows/schedule-tweet.yml
name: Weather News Schedule Tweet Every 3 Hours

on:
  schedule:
  - cron: '0 0,12 * * *'
    workflow_dispatch: # 手動実行も可能

jobs:
  tweet-schedule:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Post weather news schedule tweet
      env:
        TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
        TWITTER_API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
        TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
        TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
      run: |
        cd src
        python weather_bot.py

---

# .github/workflows/test.yml
name: Test Bot Functions

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test schedule parsing (without posting)
      run: |
        cd src
        python -c "
        from weather_bot import WeatherNewsBot
        import os
        
        # テスト用のダミー環境変数を設定
        os.environ['TWITTER_API_KEY'] = 'test'
        os.environ['TWITTER_API_SECRET'] = 'test'
        os.environ['TWITTER_ACCESS_TOKEN'] = 'test'
        os.environ['TWITTER_ACCESS_TOKEN_SECRET'] = 'test'
        
        try:
            # 番組表取得のテストのみ実行（ツイートはしない）
            from weather_bot import WeatherNewsBot
            bot = WeatherNewsBot()
            html = bot.fetch_schedule_data()
            if html:
                schedule = bot.parse_schedule(html)
                if schedule:
                    print(f'✅ テスト成功: {len(schedule)}日分の番組表を取得')
                    # 現在の番組情報テスト
                    current_time, current_program = bot.get_current_time_slot()
                    print(f'✅ 現在の番組: {current_time} - {current_program}')
                else:
                    print('❌ 番組表の解析に失敗')
            else:
                print('❌ 番組表データの取得に失敗')
        except Exception as e:
            print(f'❌ テストエラー: {e}')
        "
